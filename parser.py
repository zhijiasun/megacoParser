from pyparsing import *

AddToken = Literal("Add") | Literal("A")
AuditToken = Literal("Audit") | Literal("AT")
AuditCapToken = Literal("AuditCapability") |  Literal("AC")
AuditValueToken = Literal("AuditValue") | Literal("AV")
AuthToken = Literal("Authentication") | Literal("AU")
BothwayToken = Literal("Bothway") | Literal("BW")
BriefToken = Literal("Brief") | Literal("BR")
BufferToken                = ("Buffer"                / "BF")
CtxToken                   = ("Context"               / "C")
ContextAuditToken       = ("ContextAudit"    / "CA")
DigitMapToken              = ("DigitMap"              / "DM")
DisconnectedToken          = ("Disconnected"          / "DC")
DelayToken                 = ("Delay"                 / "DL")
DurationToken              = ("Duration"              / "DR")
EmbedToken                 = ("Embed"                 / "EM")
EmergencyToken             = ("Emergency"             / "EG")
ErrorToken                 = ("Error"                 / "ER")
EventBufferToken           = ("EventBuffer"           / "EB")
EventsToken                = ("Events"                / "E")
FailoverToken              = ("Failover"              / "FL")
ForcedToken                = ("Forced"                / "FO")
GracefulToken              = ("Graceful"              / "GR")
H221Token                  = ("H221" )
H223Token                  = ("H223" )
H226Token                  = ("H226" )
HandOffToken               = ("HandOff"               / "HO")
ImmAckRequiredToken        = ("ImmAckRequired"        / "IA")
InactiveToken              = ("Inactive"              / "IN")
IsolateToken               = ("Isolate"               / "IS")
InSvcToken                 = ("InService"             / "IV")
InterruptByEventToken      = ("IntByEvent"            / "IBE")
KeepActiveToken            = ("KeepActive"            / "KA")
LocalToken                 = ("Local"                 / "L")
LocalControlToken          = ("LocalControl"          / "O")
LockStepToken              = ("LockStep"              / "SP")
LoopbackToken              = ("Loopback"              / "LB")
MediaToken                 = ("Media"                 / "M")
MegacopToken = Literal("MEGACO") | Literal("!")
MethodToken                = ("Method"                / "MT")
MgcIdToken                 = ("MgcIdToTry"            / "MG")
ModeToken                  = ("Mode"                  / "MO")
ModifyToken                = ("Modify"                / "MF")
ModemToken                 = ("Modem"                 / "MD")
MoveToken                  = ("Move"                  / "MV")
MTPToken                   = ("MTP")
MuxToken                   = ("Mux"                   / "MX")
NotifyToken                = ("Notify"                / "N")
NotifyCompletionToken      = ("NotifyCompletion"      / "NC")
ObservedEventsToken        = ("ObservedEvents"        / "OE")
OnewayToken                = ("Oneway"                / "OW")
OnOffToken                 = ("OnOff"                 / "OO")
OtherReasonToken           = ("OtherReason"           / "OR")
OutOfSvcToken              = ("OutOfService"          / "OS")
PackagesToken              = ("Packages"              / "PG")
PendingToken = Literal("Pending") | Literal("PN")
PriorityToken              = ("Priority"              / "PR")
ProfileToken               = ("Profile"               / "PF")
ReasonToken                = ("Reason"                / "RE")
RecvonlyToken              = ("ReceiveOnly"           / "RC")
ReplyToken                 = ("Reply"                 / "P")
RestartToken               = ("Restart"               / "RS")
RemoteToken                = ("Remote"                / "R")
ReservedGroupToken         = ("ReservedGroup"         / "RG")
ReservedValueToken         = ("ReservedValue"         / "RV")
SendonlyToken              = ("SendOnly"              / "SO")
SendrecvToken              = ("SendReceive"           / "SR")
ServicesToken              = ("Services"              / "SV")
ServiceStatesToken         = ("ServiceStates"         / "SI")
ServiceChangeToken         = ("ServiceChange"         / "SC")
ServiceChangeAddressToken  = ("ServiceChangeAddress"  / "AD")
SignalListToken            = ("SignalList"            / "SL")
SignalsToken               = ("Signals"               / "SG")
SignalTypeToken            = ("SignalType"            / "SY")
StatsToken                 = ("Statistics"            / "SA")
StreamToken                = ("Stream"                / "ST")
SubtractToken              = ("Subtract"              / "S")
SynchISDNToken             = ("SynchISDN"             / "SN")
TerminationStateToken      = ("TerminationState"      / "TS")
TestToken                  = ("Test"                  / "TE")
TimeOutToken               = ("TimeOut"               / "TO")
TopologyToken              = ("Topology"              / "TP")
TransToken                 = ("Transaction"           / "T")
ResponseAckToken = Literal("TransactionResponseAck") |  Literal("K")
V18Token                   = ("V18")
V22Token                   = ("V22")
V22bisToken                = ("V22b")
V32Token                   = ("V32")
V32bisToken                = ("V32b")
V34Token                   = ("V34")
V76Token                   = ("V76")
V90Token                   = ("V90")
V91Token                   = ("V91")
VersionToken               = ("Version"               / "V")


RestChar = "; [ ] { } : , # < > ="
Version = OneOrMore(nums)
COMMENT = ";" + Word(alphanums+"+ - & ! / \ ? @ ^ ` ~ * $ \( \) \" % \| .")
domainAddress = "[" + Combine(Word(nums,max=3) + ((".")+Word(nums,max=3))*3) + "]"
domainName = "<" + Combine(Word(alphanums)+Word(alphanums+"- .",max=63)) + ">"
portNumber = Word(nums)
mId = (domainAddress | domainName)+Optional(":"+portNumber)
message = MegacopToken + '/' + Version + mId 
authenticationHeader = AuthToken + "=" + "0x" + Word(hexnums,min=8,exact=8)+"0x"+Word(hexnums,min=8,max=8)+Word(hexnums,min=24,max=64)
megacoMessage = Optional(authenticationHeader) + message

transactionPending = PendingToken + "=" + Word(nums,max=32) + "{"
transactionAck = transactionID | (transactionID + "-" + transactionID)
transactionResponseAck = ResponseAckToken + "{" + transactionAck
transactionRequest

transactionList = OneOrMore(transactionRequest | transactionReply | transactionPending | transactionResponseAck)
messageBody = errorDescriptor | transactionList
